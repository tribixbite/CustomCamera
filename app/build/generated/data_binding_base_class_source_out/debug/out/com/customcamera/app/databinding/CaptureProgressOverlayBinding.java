// Generated by view binder compiler. Do not edit!
package com.customcamera.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.customcamera.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CaptureProgressOverlayBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ProgressBar captureProgressBar;

  @NonNull
  public final TextView captureProgressSubtext;

  @NonNull
  public final TextView captureProgressText;

  @NonNull
  public final ProgressBar recordingProgressBar;

  @NonNull
  public final LinearLayout recordingProgressContainer;

  @NonNull
  public final TextView recordingTimeText;

  private CaptureProgressOverlayBinding(@NonNull FrameLayout rootView,
      @NonNull ProgressBar captureProgressBar, @NonNull TextView captureProgressSubtext,
      @NonNull TextView captureProgressText, @NonNull ProgressBar recordingProgressBar,
      @NonNull LinearLayout recordingProgressContainer, @NonNull TextView recordingTimeText) {
    this.rootView = rootView;
    this.captureProgressBar = captureProgressBar;
    this.captureProgressSubtext = captureProgressSubtext;
    this.captureProgressText = captureProgressText;
    this.recordingProgressBar = recordingProgressBar;
    this.recordingProgressContainer = recordingProgressContainer;
    this.recordingTimeText = recordingTimeText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CaptureProgressOverlayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CaptureProgressOverlayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.capture_progress_overlay, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CaptureProgressOverlayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.captureProgressBar;
      ProgressBar captureProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (captureProgressBar == null) {
        break missingId;
      }

      id = R.id.captureProgressSubtext;
      TextView captureProgressSubtext = ViewBindings.findChildViewById(rootView, id);
      if (captureProgressSubtext == null) {
        break missingId;
      }

      id = R.id.captureProgressText;
      TextView captureProgressText = ViewBindings.findChildViewById(rootView, id);
      if (captureProgressText == null) {
        break missingId;
      }

      id = R.id.recordingProgressBar;
      ProgressBar recordingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (recordingProgressBar == null) {
        break missingId;
      }

      id = R.id.recordingProgressContainer;
      LinearLayout recordingProgressContainer = ViewBindings.findChildViewById(rootView, id);
      if (recordingProgressContainer == null) {
        break missingId;
      }

      id = R.id.recordingTimeText;
      TextView recordingTimeText = ViewBindings.findChildViewById(rootView, id);
      if (recordingTimeText == null) {
        break missingId;
      }

      return new CaptureProgressOverlayBinding((FrameLayout) rootView, captureProgressBar,
          captureProgressSubtext, captureProgressText, recordingProgressBar,
          recordingProgressContainer, recordingTimeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
